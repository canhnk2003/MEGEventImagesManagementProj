$(document).ready(function () {
  const baseImageUrl = `${BASE_URL}/uploads/`; // ƒê∆∞·ªùng d·∫´n th∆∞ m·ª•c ch·ª©a ·∫£nh
  let imagesList = []; // M·∫£ng l∆∞u danh s√°ch ·∫£nh
  // H√†m l·∫•y tham s·ªë t·ª´ URL
  function getQueryParam(param) {
    const urlParams = new URLSearchParams(window.location.search);
    return urlParams.get(param);
  }

  const eventId = getQueryParam("eventId");
  if (!eventId) {
    alert("Kh√¥ng t√¨m th·∫•y s·ª± ki·ªán!");
    return;
  }

  // G·ªçi API l·∫•y th√¥ng tin s·ª± ki·ªán ƒëi·ªÅn v√†o h2
  $.ajax({
    url: `${BASE_URL}/api/v1/Events/get/${eventId}`,
    method: "GET",
    dataType: "json",
    success: function (event) {
      $("h2").text(event.name); // Hi·ªÉn th·ªã t√™n s·ª± ki·ªán
    },
    error: function () {
      alert("L·ªói khi t·∫£i th√¥ng tin s·ª± ki·ªán.");
    },
  });

  // G·ªçi API l·∫•y danh s√°ch ·∫£nh theo s·ª± ki·ªán
  $.ajax({
    url: `${BASE_URL}/api/v1/Images/getbyevent/${eventId}`,
    method: "GET",
    dataType: "json",
    success: function (imagesByYear) {
      const imageContainer = $("#listImageByEvent");
      imageContainer.empty();
      imagesList = []; // Reset danh s√°ch ·∫£nh
      if (Object.keys(imagesByYear).length === 0) {
        imageContainer.html(
          `<img src="assets/img/default.png" class="text-center w-25"/>`
        );
        return;
      }

      // üîπ Hi·ªÉn th·ªã ·∫£nh theo nƒÉm
      Object.keys(imagesByYear)
        .sort((a, b) => b - a) // S·∫Øp x·∫øp nƒÉm gi·∫£m d·∫ßn
        .forEach((year) => {
          const yearId = `year-${year}`; // T·∫°o ID duy nh·∫•t cho m·ªói nƒÉm
          const yearSection = `
        <div class="year-section">
          <h4 class="year-title m-3 ms-0">${year}</h4>
          <div id="${yearId}" class="row images-container"></div>
        </div>`;
          imageContainer.append(yearSection);

          const imagesRow = $(`#${yearId}`); // L·∫•y ƒë√∫ng container theo ID

          imagesByYear[year].forEach((image, index) => {
            const imgSrc = `${baseImageUrl}${image.path}`;

            // üü¢ Th√™m ·∫£nh v√†o danh s√°ch `imagesList`
            imagesList.push({
              id: image.id,
              src: imgSrc,
              description: image.description || "Kh√¥ng c√≥ m√¥ t·∫£",
            });
            const imageItem = `
            <div id="${
              image.id
            }" class="image-item col-xxl-1-5 col-xl-2 col-lg-3 col-md-4 col-sm-6 p-2">
                <div class="card shadow-sm" data-id="${image.id}">
                    <input type="checkbox" class="select-checkbox" id="checkbox-${year}-${index}" />
                    <label for="checkbox-${year}-${index}" class="checkbox-label"></label>

                    <img src="${imgSrc}" class="card-img-top" alt="Image"/>

                    <div class="card-body">
                        <p class="card-text text-start description">
                          ${image.description || "Kh√¥ng c√≥ m√¥ t·∫£"}
                        </p>
                    </div>
                </div>
            </div>`;
            imagesRow.append(imageItem);
          });
        });
    },
    error: function () {
      alert("L·ªói khi t·∫£i danh s√°ch ·∫£nh.");
    },
  });

  //X·ª≠ l√Ω khi nh·∫•n Th√™m ·∫£nh
  const fileInput = $("#inputFile");

  // üîπ Nh·∫•n n√∫t "Th√™m m·ªõi" -> M·ªü c·ª≠a s·ªï ch·ªçn file
  $("#btnAddImage").on("click", function () {
    fileInput.trigger("click");
  });

  //X·ª≠ l√Ω s·ª± ki·ªán khi nh·∫•n th√™m trong c·ª≠a s·ªï File Explore
  fileInput.on("change", function () {
    console.log("File input changed");
    const files = this.files;
    if (!files || files.length === 0) return;
    const today = new Date().toISOString();
    const formData = new FormData();
    const imagesMetadata = [];

    let totalSize = 0; // üõë Bi·∫øn ƒë·ªÉ t√≠nh t·ªïng dung l∆∞·ª£ng

    //Th√™m d·ªØ li·ªáu ·∫£nh v√†o m·∫£ng imagesMetadata
    $.each(files, function (index, file) {
      if (!file.type.startsWith("image/")) return; // B·ªè qua file kh√¥ng ph·∫£i ·∫£nh

      totalSize += file.size; // ‚úÖ C·ªông d·ªìn dung l∆∞·ª£ng

      if (totalSize > 157286400) {
        // 150MB = 157286400 bytes
        alert("T·ªïng dung l∆∞·ª£ng ·∫£nh kh√¥ng ƒë∆∞·ª£c v∆∞·ª£t qu√° 150MB!");
        return false; // üõë D·ª´ng l·∫∑p
      }

      formData.append("files", file);
      // ‚úÖ T√°ch th√¥ng tin t·ª´ t√™n file theo ƒë·ªãnh d·∫°ng: id_H·ªç t√™n_M√¥ t·∫£
      const fileNameWithoutExt = file.name.replace(/\.[^/.]+$/, ""); // Lo·∫°i b·ªè ph·∫ßn m·ªü r·ªông (.jpg, .png,...)
      const nameParts = fileNameWithoutExt.split("_");

      if (nameParts.length < 3) {
        alert(`T√™n file "${file.name}" kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng!`);
        return false; // üõë D·ª´ng l·∫∑p n·∫øu t√™n file kh√¥ng h·ª£p l·ªá
      }

      const fullName = nameParts[1].trim(); // L·∫•y "H·ªç t√™n"
      const description = nameParts.slice(2).join("_").trim(); // L·∫•y ph·∫ßn m√¥ t·∫£
      const fullDescription = `${fullName} - ${description}`; // ‚úÖ M√¥ t·∫£ = "H·ªç t√™n - M√¥ t·∫£"
      imagesMetadata.push({
        name: fullName,
        description: fullDescription,
        timeOccurs: today,
        path: "",
        eventId: eventId,
        event: null,
      });
    });

    if (imagesMetadata.length === 0) return;

    formData.append("metadataJson", JSON.stringify(imagesMetadata));

    //G·ªçi API th√™m ·∫£nh
    $.ajax({
      url: `${BASE_URL}/api/v1/Images/add`,
      method: "POST",
      data: formData,
      processData: false,
      contentType: false,
      success: function (response) {
        alert(response.message);
        location.reload(); // Refresh l·∫°i trang sau khi th√™m ·∫£nh th√†nh c√¥ng
      },
      error: function () {
        alert("L·ªói khi t·∫£i ·∫£nh l√™n. Vui l√≤ng th·ª≠ l·∫°i.");
      },
    });
  });

  // X·ª≠ l√Ω t√¨m ki·∫øm s·ª± ki·ªán
  $("#btnSearch").on("click", function () {
    const searchText = $("#searchInput").val().trim().toLowerCase();

    $(".image-item").each(function () {
      const des = $(this).find(".card-text").text().trim().toLowerCase();
      if (des.includes(searchText)) {
        $(this).show();
      } else {
        $(this).hide();
      }
    });
  });

  //X·ª≠ l√Ω s·ª± ki·ªán khi nh·∫•n n√∫t x√≥a
  let selectedImages = []; // Danh s√°ch ID ·∫£nh ƒë√£ ch·ªçn

  // üîπ H√†m c·∫≠p nh·∫≠t tr·∫°ng th√°i n√∫t X√≥a
  function updateDeleteButtonState() {
    if (selectedImages.length > 0) {
      $("#btnDeleteImage").prop("disabled", false);
    } else {
      $("#btnDeleteImage").prop("disabled", true);
    }
  }

  // üîπ X·ª≠ l√Ω khi ch·ªçn/b·ªè ch·ªçn checkbox
  $(document).on("change", ".select-checkbox", function () {
    const imageId = parseInt($(this).closest(".image-item").attr("id"), 10);

    if ($(this).is(":checked")) {
      // Th√™m v√†o danh s√°ch n·∫øu ch∆∞a c√≥
      if (!selectedImages.includes(imageId)) {
        selectedImages.push(imageId);
      }
    } else {
      // X√≥a kh·ªèi danh s√°ch n·∫øu b·ªè ch·ªçn
      selectedImages = selectedImages.filter((id) => id !== imageId);
    }

    // C·∫≠p nh·∫≠t tr·∫°ng th√°i n√∫t X√≥a
    updateDeleteButtonState();
  });

  // üîπ X·ª≠ l√Ω khi nh·∫•n n√∫t x√≥a
  $("#btnDelete").on("click", function () {
    if (selectedImages.length === 0) {
      alert("Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt ·∫£nh ƒë·ªÉ x√≥a.");
      return;
    }

    // G·ªçi API x√≥a
    $.ajax({
      url: `${BASE_URL}/api/v1/Images/soft-delete`,
      method: "DELETE",
      contentType: "application/json",
      data: JSON.stringify(selectedImages), // Truy·ªÅn danh s√°ch ID ·∫£nh
      success: function (response) {
        alert("X√≥a ·∫£nh th√†nh c√¥ng!");
        //T·∫£i l·∫°i trang
        location.reload();

        // Reset danh s√°ch ·∫£nh ƒë√£ ch·ªçn & disable n√∫t X√≥a
        selectedImages = [];
        updateDeleteButtonState();
      },
      error: function () {
        alert("L·ªói khi x√≥a ·∫£nh. Vui l√≤ng th·ª≠ l·∫°i.");
      },
    });
  });

  //X·ª≠ l√Ω khi nh·∫•n v√†o 1 ·∫£nh ƒë·ªÉ xem

  let currentIndex = 0; // V·ªã tr√≠ ·∫£nh hi·ªán t·∫°i

  // üîπ X·ª≠ l√Ω khi nh·∫•n v√†o ·∫£nh ƒë·ªÉ xem trong modal
  $(document).on("click", ".image-item img", function () {
    const imgId = $(this).closest(".card").data("id"); // üü¢ L·∫•y ƒë√∫ng data-id t·ª´ .card
    console.log("üü¢ Clicked Image ID:", imgId);

    currentIndex = imagesList.findIndex((img) => img.id == imgId);
    console.log("üîπ Lightbox Index:", currentIndex);

    if (currentIndex !== -1) {
      showImage(currentIndex);
      $("#imageModal").modal("show");
    }
  });

  // üîπ Hi·ªÉn th·ªã ·∫£nh trong modal
  function showImage(index) {
    const image = imagesList[index];
    if (!image) return;

    $("#modalImage").attr("src", image.src);
    $("#modalDescription").text(image.description);

    // V√¥ hi·ªáu h√≥a n√∫t n·∫øu ƒë·∫øn ƒë·∫ßu/cu·ªëi danh s√°ch
    $("#prevImage").prop("disabled", index === 0);
    $("#nextImage").prop("disabled", index === imagesList.length - 1);
  }

  // üîπ X·ª≠ l√Ω n√∫t Next
  $("#nextImage").on("click", function () {
    if (currentIndex < imagesList.length - 1) {
      currentIndex++;
      showImage(currentIndex);
    }
  });

  // üîπ X·ª≠ l√Ω n√∫t Prev
  $("#prevImage").on("click", function () {
    if (currentIndex > 0) {
      currentIndex--;
      showImage(currentIndex);
    }
  });
  // üîπ X·ª≠ l√Ω s·ª± ki·ªán "Ch·ªçn t·∫•t c·∫£"
  $("#btnSelectAll").click(function () {
    console.log("Canh");
    $(".select-checkbox").prop("checked", true).trigger("change");
  });

  // üîπ X·ª≠ l√Ω s·ª± ki·ªán "B·ªè ch·ªçn t·∫•t c·∫£"
  $("#btnDeselectAll").click(function () {
    $(".select-checkbox").prop("checked", false).trigger("change");
  });
});
